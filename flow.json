[
    {
        "id": "bcfc1592.fd71f8",
        "type": "tab",
        "label": "Configuration",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b728105e.c940f",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3c7e4464.321d3c",
        "type": "tab",
        "label": "1.2_To read",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c911378b.84a6a8",
        "type": "tab",
        "label": "1.2_Read Modbus",
        "disabled": false,
        "info": ""
    },
    {
        "id": "30f53997.8a2b66",
        "type": "tab",
        "label": "1.2_Special reads",
        "disabled": true,
        "info": ""
    },
    {
        "id": "719ef0cd.4627",
        "type": "tab",
        "label": "1.2_Digital Inputs - deprecated",
        "disabled": true,
        "info": ""
    },
    {
        "id": "481c78ef.5a7c48",
        "type": "tab",
        "label": "1.3_Digital Inputs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fa4618a0.5a1ec8",
        "type": "tab",
        "label": "1.2_MQTT Handling",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b2d5f1b6.dabb4",
        "type": "tab",
        "label": "1.2_HTTP request to enectiva",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a87881c4.212c5",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "mqtt.flespi.io",
        "port": "8883",
        "tls": "7d4ef46f.03c40c",
        "clientid": "${MQTT_CLIENTID}",
        "usetls": true,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": false,
        "birthTopic": "${MQTT_STATUS}",
        "birthQos": "1",
        "birthRetain": "true",
        "birthPayload": "connected",
        "closeTopic": "${MQTT_STATUS}",
        "closeQos": "0",
        "closeRetain": "true",
        "closePayload": "disconnected (exp)",
        "willTopic": "${MQTT_STATUS}",
        "willQos": "1",
        "willRetain": "true",
        "willPayload": "disconnected (unexp)"
    },
    {
        "id": "7d4ef46f.03c40c",
        "type": "tls-config",
        "z": "",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "7afba866.28a7d8",
        "type": "modbus-client",
        "z": 0,
        "name": "RS485",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/extcomm/0/0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "500",
        "unit_id": 2,
        "commandDelay": 20,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "cd4390dd.51895",
        "type": "modbus-client",
        "z": 0,
        "name": "TCP Localhost",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "de825313.221ab",
        "type": "protobuf-file",
        "z": "",
        "protopath": "/home/unipi/librarian_protobuf.proto"
    },
    {
        "id": "1030a868.839bc8",
        "type": "ui_tab",
        "z": 0,
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "60429a85.e769f4",
        "type": "ui_group",
        "z": 0,
        "name": "Read",
        "tab": "1030a868.839bc8",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "2a4cc262.c1aebe",
        "type": "ui_group",
        "z": 0,
        "name": "System",
        "tab": "1030a868.839bc8",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "581af5c1.4ce58c",
        "type": "ui_base",
        "z": 0,
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#1395c6",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#1395c6",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#1395c6",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#39bbec",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#1395c6",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "bc178ffa.97def",
        "type": "websocket-client",
        "z": "",
        "path": "ws://127.0.0.1:8080/ws",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "c1c12c16.5be98",
        "type": "websocket-client",
        "z": "",
        "path": "ws://127.0.0.1:8080/ws",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "2511a0d8.ca575",
        "type": "inject",
        "z": "b728105e.c940f",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 290,
        "y": 360,
        "wires": [
            [
                "20bcf5eb.2f4cfa",
                "8f01c115.ca2c2",
                "770a49b1.f74b18",
                "9e566ecd.1cde7",
                "f25890fb.9ba8f",
                "390be9bb.ea9fc6"
            ]
        ]
    },
    {
        "id": "135253f5.08adac",
        "type": "function",
        "z": "b728105e.c940f",
        "name": "",
        "func": "// if values don't exist, create it\ncontext.read_fc = context.read_fc || \"3\";\ncontext.read_unitid = context.read_unitid || \"1\";\ncontext.read_address = context.read_address || \"0\";\ncontext.read_quantity = context.read_quantity || \"2\";\ncontext.read_datatype = context.read_datatype || \"float\";\n\nif (msg.topic == \"fc\") {\n    context.read_fc = msg.payload;\n}\nelse if(msg.topic == \"unitid\") {\n    context.read_unitid = msg.payload;\n}\nelse if(msg.topic == \"address\") {\n    context.read_address = msg.payload;\n}\nelse if(msg.topic == \"quantity\") {\n    context.read_quantity = msg.payload;\n}\nelse if(msg.topic == \"datatype\") {\n    flow.set(\"read_datatype\", msg.payload);\n}\n\n\n    // 'datatype': context.read_datatype,\n\nmsg.payload = \n{ \n    'fc': context.read_fc, \n    'unitid': context.read_unitid, \n    'address': context.read_address, \n    'quantity': context.read_quantity,\n} \n\nif(msg.topic == \"trigger_read\") {\n    return msg;\n}\n//else if(msg.topic == \"trigger_write\") {\n//    return [ null, msg ];\n//}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 360,
        "wires": [
            [
                "9ccd8423.f731a8",
                "d9f2e56e.f59a98",
                "788dd6aa.132828"
            ]
        ],
        "outputLabels": [
            "Read"
        ]
    },
    {
        "id": "9ccd8423.f731a8",
        "type": "debug",
        "z": "b728105e.c940f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "85f6675d.3217e8",
        "type": "function",
        "z": "b728105e.c940f",
        "name": "",
        "func": "let val = 0;\ndatatype = flow.get(\"read_datatype\");\n\nif (datatype == \"int32\") {\n    val = msg.payload.buffer.readInt32BE(0,4);\n} else if (datatype == \"float\") {\n    val = msg.payload.buffer.readFloatBE(0,4);\n} else if (datatype == \"hex\") {\n    val = msg.payload.buffer.toString('hex');\n} else if (datatype == \"int16\") {\n    val = msg.payload.buffer.readInt16BE(0,2);\n}\n// let met = msg.input.payload.meterid;\n// let sui = msg.input.payload.address;\n\nmsg.payload = val;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "ffd32547.af3f78",
                "5253d02b.354f9"
            ]
        ]
    },
    {
        "id": "7e1bcbb6.5f1ab4",
        "type": "debug",
        "z": "b728105e.c940f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1230,
        "y": 320,
        "wires": []
    },
    {
        "id": "5253d02b.354f9",
        "type": "debug",
        "z": "b728105e.c940f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 400,
        "wires": []
    },
    {
        "id": "be10403c.72a1a",
        "type": "link in",
        "z": "b728105e.c940f",
        "name": "ngrok status",
        "links": [
            "e2c49c45.339f5",
            "914d5acf.1c7c28",
            "a1e860f3.376a4",
            "787d7bc8.9e6d04"
        ],
        "x": 455,
        "y": 760,
        "wires": [
            [
                "5d341c04.64a854"
            ]
        ]
    },
    {
        "id": "69130bf1.d4bfa4",
        "type": "function",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "func": "if (msg.payload == \"kill\") {\n    return {\"kill\":\"\"};\n} else {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 780,
        "wires": [
            [
                "d255e4f0.2bc128"
            ]
        ]
    },
    {
        "id": "d255e4f0.2bc128",
        "type": "exec",
        "z": "bcfc1592.fd71f8",
        "command": "lt -p",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": true,
        "name": "localtunnel",
        "x": 610,
        "y": 780,
        "wires": [
            [
                "fba84e81.e24fc",
                "9732ab7e.06f8f8"
            ],
            [],
            []
        ]
    },
    {
        "id": "fba84e81.e24fc",
        "type": "debug",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 970,
        "y": 740,
        "wires": []
    },
    {
        "id": "9732ab7e.06f8f8",
        "type": "mqtt out",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "topic": "${MQTT_LOCALTUNNEL_STATUS}",
        "qos": "1",
        "retain": "false",
        "broker": "a87881c4.212c5",
        "x": 1050,
        "y": 780,
        "wires": []
    },
    {
        "id": "604b4a1a.42e7c4",
        "type": "mqtt in",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "topic": "${MQTT_LOCALTUNNEL_CONTROL}",
        "qos": "1",
        "broker": "a87881c4.212c5",
        "x": 250,
        "y": 780,
        "wires": [
            [
                "69130bf1.d4bfa4"
            ]
        ]
    },
    {
        "id": "2c2e6e00.760112",
        "type": "function",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "func": "if (msg.payload == \"kill\") {\n    return {\"kill\":\"\"};\n} else {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1060,
        "wires": [
            [
                "b6947f70.6be77"
            ]
        ]
    },
    {
        "id": "3e140505.8ae6ba",
        "type": "debug",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 970,
        "y": 1020,
        "wires": []
    },
    {
        "id": "dd1cb19e.70843",
        "type": "mqtt out",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "topic": "${MQTT_NGROK_STATUS}",
        "qos": "1",
        "retain": "false",
        "broker": "a87881c4.212c5",
        "x": 1020,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d399f461.4ec898",
        "type": "mqtt in",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "topic": "${MQTT_NGROK_CONTROL}",
        "qos": "1",
        "broker": "a87881c4.212c5",
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "2c2e6e00.760112"
            ]
        ]
    },
    {
        "id": "b6947f70.6be77",
        "type": "exec",
        "z": "bcfc1592.fd71f8",
        "command": " ./ngrok tcp ",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": true,
        "name": "NGROK exec",
        "x": 620,
        "y": 1060,
        "wires": [
            [
                "dd1cb19e.70843",
                "3e140505.8ae6ba"
            ],
            [],
            []
        ]
    },
    {
        "id": "9ed182e1.746c2",
        "type": "comment",
        "z": "bcfc1592.fd71f8",
        "name": "Open tunnel thru ngrok. In ngrok admin, IP+port can be obtained. USAGE: send `[protocol] [port_number]` e.g. `tcp 22` to specified topic",
        "info": "",
        "x": 550,
        "y": 980,
        "wires": []
    },
    {
        "id": "c2829a09.7c5cd8",
        "type": "comment",
        "z": "bcfc1592.fd71f8",
        "name": "Open tunnel thru localtunnel. URL is returned to `/status` topic. USAGE: send `[port_number]` to specified topic",
        "info": "",
        "x": 470,
        "y": 700,
        "wires": []
    },
    {
        "id": "13bbe8a0.be00e7",
        "type": "status",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "scope": [
            "b6947f70.6be77"
        ],
        "x": 600,
        "y": 1120,
        "wires": [
            [
                "ef8bbbcb.d48f48"
            ]
        ]
    },
    {
        "id": "6402556b.129c6c",
        "type": "status",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "scope": [
            "d255e4f0.2bc128"
        ],
        "x": 600,
        "y": 840,
        "wires": [
            [
                "bace22dd.1c4a6"
            ]
        ]
    },
    {
        "id": "bace22dd.1c4a6",
        "type": "function",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "func": "msg.payload = msg.status.text;\nnode.status({text: msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 840,
        "wires": [
            [
                "9732ab7e.06f8f8",
                "fba84e81.e24fc"
            ]
        ]
    },
    {
        "id": "ef8bbbcb.d48f48",
        "type": "function",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "func": "msg.payload = msg.status.text;\nnode.status({text: msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "3e140505.8ae6ba",
                "dd1cb19e.70843"
            ]
        ]
    },
    {
        "id": "23f206e9.4ebe6a",
        "type": "inject",
        "z": "bcfc1592.fd71f8",
        "name": "Config after strartup",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "dbc99d3e.af06"
            ]
        ]
    },
    {
        "id": "9f1b593e.10b7f8",
        "type": "comment",
        "z": "bcfc1592.fd71f8",
        "name": "After startup config - UUID etc",
        "info": "",
        "x": 700,
        "y": 60,
        "wires": []
    },
    {
        "id": "d3521427.9e20b8",
        "type": "debug",
        "z": "fa4618a0.5a1ec8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "1ac16f77.b5cc71",
        "type": "mqtt out",
        "z": "fa4618a0.5a1ec8",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "broker": "a87881c4.212c5",
        "x": 1070,
        "y": 200,
        "wires": []
    },
    {
        "id": "ecdaaa4a.a690f8",
        "type": "status",
        "z": "fa4618a0.5a1ec8",
        "name": "",
        "scope": [
            "1ac16f77.b5cc71"
        ],
        "x": 840,
        "y": 360,
        "wires": [
            [
                "914d5acf.1c7c28",
                "1de52ec1.c7dc21"
            ]
        ]
    },
    {
        "id": "914d5acf.1c7c28",
        "type": "link out",
        "z": "fa4618a0.5a1ec8",
        "name": "MQTT status",
        "links": [
            "be10403c.72a1a"
        ],
        "x": 975,
        "y": 360,
        "wires": []
    },
    {
        "id": "1de52ec1.c7dc21",
        "type": "debug",
        "z": "fa4618a0.5a1ec8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1010,
        "y": 400,
        "wires": []
    },
    {
        "id": "ccbf941b.d5fe58",
        "type": "function",
        "z": "fa4618a0.5a1ec8",
        "name": "Prepare MQTT",
        "func": "incoming_message = msg.payload;\nmsg = {};\n\ncust_uuid = global.get('cust_uuid');\nenvironment = global.get('environment');\n\nsuit = incoming_message.suit.toString();\nmeter_id = incoming_message.meterid.toString();\n\nmsg.payload = {\n    \"time\": incoming_message.time,\n    \"value\": incoming_message.value,\n    \"sender\": \"unipi\"\n}\n\nif (incoming_message.point_type == 'reading'){\n    msg.topic = environment + '/reading/' + cust_uuid + '/' + meter_id + '/' + suit;\n} else {\n    msg.topic = environment + '/data_point/' + cust_uuid + '/' + meter_id + '/' + suit;\n}\n\n\nnode.status({text: \"Last message at \" + msg.payload.time.toString()});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 200,
        "wires": [
            [
                "dc8b84a0.6ae268",
                "d3521427.9e20b8"
            ]
        ]
    },
    {
        "id": "4336e6a6.c2c578",
        "type": "debug",
        "z": "fa4618a0.5a1ec8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1070,
        "y": 260,
        "wires": []
    },
    {
        "id": "8dad30f.9ef1ed",
        "type": "debug",
        "z": "fa4618a0.5a1ec8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "x": 1080,
        "y": 300,
        "wires": []
    },
    {
        "id": "ef17454a.0792d8",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": "msg.payload =  { ",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 480,
        "y": 400,
        "wires": []
    },
    {
        "id": "8bb018d9.704a68",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": " 'value': HODNOTA:FLOAT,",
        "info": "msg.payload = \n{\n    'value': HODNOTA:FLOAT,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 530,
        "y": 440,
        "wires": []
    },
    {
        "id": "382cbcb9.df79f4",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": "'time': CAS,",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': Math.floor(Date.now() / 1000);,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 490,
        "y": 480,
        "wires": []
    },
    {
        "id": "961b6c4b.79086",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": "'meterid': METER_ID,",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 520,
        "y": 520,
        "wires": []
    },
    {
        "id": "5ef55be2.26c2f4",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": " 'suit': \"SUIT\",",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 490,
        "y": 560,
        "wires": []
    },
    {
        "id": "339b47f7.b68d28",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": "'point_type': \"data_point\" ",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 530,
        "y": 600,
        "wires": []
    },
    {
        "id": "df5a6164.893d3",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": "}",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 450,
        "y": 640,
        "wires": []
    },
    {
        "id": "3af24471.7739dc",
        "type": "debug",
        "z": "c911378b.84a6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 160,
        "wires": []
    },
    {
        "id": "8a915edb.9a252",
        "type": "function",
        "z": "c911378b.84a6a8",
        "name": "Extract value",
        "func": "node.status({fill:\"grey\",shape:\"dot\",text:\"waiting\"});\n\nif (msg.input.payload.value.datatype == \"int32\") {\n    val = msg.payload.buffer.readInt32BE(0,4);\n    node.status({fill:\"green\",shape:\"dot\",text:\"int32\"});\n} else if (msg.input.payload.value.datatype == \"float\") {\n    val = msg.payload.buffer.readFloatBE(0,4);\n    node.status({fill:\"green\",shape:\"dot\",text:\"float\"});\n} else if (msg.input.payload.value.datatype == \"hex\") {\n    val = msg.payload.buffer.toString('hex');\n    node.status({fill:\"green\",shape:\"dot\",text:\"hex\"});\n} else if (msg.input.payload.value.datatype == \"int16\") {\n    val = msg.payload.buffer.readInt16BE(0,2);\n    node.status({fill:\"green\",shape:\"dot\",text:\"int16\"});\n} else {\n    node.status({fill:\"red\",shape:\"dot\",text:\"unknown datatype\"});\n    return\n}\n\nlet meter_id = msg.input.payload.value.meterid;\nlet suit = msg.input.payload.address;\nlet time = Math.floor(Date.now() / 1000);\nlet point_type = msg.input.payload.value.point_type;\n\nmsg = {};\n\nmsg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': meter_id,\n    'suit': suit,\n    'point_type': point_type\n};\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 100,
        "wires": [
            [
                "e02232bd.de84d"
            ]
        ]
    },
    {
        "id": "78f0c0b8.082fd",
        "type": "comment",
        "z": "3c7e4464.321d3c",
        "name": "MODBUS RTU",
        "info": "",
        "x": 1240,
        "y": 260,
        "wires": []
    },
    {
        "id": "7964a530.c0d83c",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "CRON 15 minutes",
        "topic": "",
        "payload": "15m",
        "payloadType": "str",
        "repeat": "",
        "crontab": "*/15 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 380,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "60252d70.bf58b4",
        "type": "link in",
        "z": "c911378b.84a6a8",
        "name": "Modbus_reading_in",
        "links": [
            "28858951.dd27b6"
        ],
        "x": 95,
        "y": 100,
        "wires": [
            [
                "559606e.e96c1f8",
                "d673c970.b0f068"
            ]
        ]
    },
    {
        "id": "e02232bd.de84d",
        "type": "link out",
        "z": "c911378b.84a6a8",
        "name": "Modbus_reading_out",
        "links": [
            "c91f874d.be1658"
        ],
        "x": 975,
        "y": 100,
        "wires": []
    },
    {
        "id": "28858951.dd27b6",
        "type": "link out",
        "z": "3c7e4464.321d3c",
        "name": "",
        "links": [
            "60252d70.bf58b4"
        ],
        "x": 955,
        "y": 260,
        "wires": []
    },
    {
        "id": "b926c6e3.490bd8",
        "type": "exec",
        "z": "30f53997.8a2b66",
        "command": "/opt/vc/bin/vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "measure_temp",
        "x": 560,
        "y": 160,
        "wires": [
            [
                "187e8314.a28a2d"
            ],
            [],
            []
        ]
    },
    {
        "id": "187e8314.a28a2d",
        "type": "function",
        "z": "30f53997.8a2b66",
        "name": "convert output to standard message format",
        "func": "node.status({text: msg.payload});\n\nval = msg.payload;\nval = val.slice(5, -2);\nval = parseFloat(val);\nlet time = Math.floor(Date.now() / 1000);\nmsg = {};\n\nmsg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': global.get('serno'),\n    'suit': \"cpu_temperature\",\n    'point_type': \"data_point\"\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 160,
        "wires": [
            [
                "836fe4ef.c23688",
                "2187bd0.8ecad44"
            ]
        ]
    },
    {
        "id": "ecb3ce9b.eb03b",
        "type": "link in",
        "z": "30f53997.8a2b66",
        "name": "Measure_Pi_temperature",
        "links": [
            "9890d5a6.289538"
        ],
        "x": 235,
        "y": 160,
        "wires": [
            [
                "b926c6e3.490bd8"
            ]
        ]
    },
    {
        "id": "836fe4ef.c23688",
        "type": "link out",
        "z": "30f53997.8a2b66",
        "name": "Special_reading_out",
        "links": [
            "c91f874d.be1658",
            "31762113.90274e",
            "189bec5c.0898d4"
        ],
        "x": 1375,
        "y": 240,
        "wires": []
    },
    {
        "id": "c91f874d.be1658",
        "type": "link in",
        "z": "fa4618a0.5a1ec8",
        "name": "MQTT_in",
        "links": [
            "836fe4ef.c23688",
            "f7d1186a.403e58",
            "e02232bd.de84d",
            "7f081809.c446b8"
        ],
        "x": 295,
        "y": 200,
        "wires": [
            [
                "ccbf941b.d5fe58"
            ]
        ]
    },
    {
        "id": "a5687be9.41f308",
        "type": "http request",
        "z": "30f53997.8a2b66",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "ef02f507.d42408",
                "8d8b2dd6.38b92"
            ]
        ]
    },
    {
        "id": "ef02f507.d42408",
        "type": "function",
        "z": "30f53997.8a2b66",
        "name": "parse output to standard message format",
        "func": "if(msg.payload.status == 'success') {\n\n    val = msg.payload.data.value;\n    meter_id = msg.payload.data.address;\n    time = Math.floor(msg.payload.data.time);\n    //let time = Math.floor(Date.now() / 1000);\n    \n    \n    msg = {};\n    \n    msg.payload = \n    {\n        'value': val,\n        'time': time,\n        'meterid': meter_id,\n        'suit': \"1wire\",\n        'point_type': \"data_point\"\n    };\n    \n    node.status({text: 'Last read: ' + msg.payload.value.toString()});\n    return msg;\n} else return",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 320,
        "wires": [
            [
                "836fe4ef.c23688",
                "d4f41c2e.06f22"
            ]
        ]
    },
    {
        "id": "fe597368.6957a",
        "type": "link in",
        "z": "30f53997.8a2b66",
        "name": "Onewire",
        "links": [
            "4bde0347.eb110c"
        ],
        "x": 235,
        "y": 320,
        "wires": [
            [
                "41705dd6.23bfa4"
            ]
        ]
    },
    {
        "id": "609814e4.269c1c",
        "type": "comment",
        "z": "30f53997.8a2b66",
        "name": "Processor temperature",
        "info": "",
        "x": 380,
        "y": 100,
        "wires": []
    },
    {
        "id": "88dd142c.af9c98",
        "type": "comment",
        "z": "30f53997.8a2b66",
        "name": "1-Wire thermometer",
        "info": "",
        "x": 370,
        "y": 280,
        "wires": []
    },
    {
        "id": "41705dd6.23bfa4",
        "type": "function",
        "z": "30f53997.8a2b66",
        "name": "prepare request",
        "func": "incoming = msg.payload;\nmsg = {};\n\nmsg.url = '127.0.0.1:8080/json/sensor/' + incoming.address;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 320,
        "wires": [
            [
                "a5687be9.41f308",
                "b39c204c.7cba6"
            ]
        ]
    },
    {
        "id": "d4f41c2e.06f22",
        "type": "debug",
        "z": "30f53997.8a2b66",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1190,
        "y": 380,
        "wires": []
    },
    {
        "id": "b39c204c.7cba6",
        "type": "debug",
        "z": "30f53997.8a2b66",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 380,
        "wires": []
    },
    {
        "id": "8d8b2dd6.38b92",
        "type": "debug",
        "z": "30f53997.8a2b66",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 790,
        "y": 380,
        "wires": []
    },
    {
        "id": "36f4b92a.38bb26",
        "type": "link out",
        "z": "3c7e4464.321d3c",
        "name": "",
        "links": [
            "8aebbe81.c3abe"
        ],
        "x": 955,
        "y": 300,
        "wires": [],
        "inputLabels": [
            "DI"
        ]
    },
    {
        "id": "d324c194.5da75",
        "type": "comment",
        "z": "3c7e4464.321d3c",
        "name": "DIGITAL INPUT COUNTER",
        "info": "",
        "x": 1280,
        "y": 300,
        "wires": []
    },
    {
        "id": "2187bd0.8ecad44",
        "type": "debug",
        "z": "30f53997.8a2b66",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1190,
        "y": 120,
        "wires": []
    },
    {
        "id": "770e3b4c.eec4d4",
        "type": "function",
        "z": "719ef0cd.4627",
        "name": "",
        "func": "context.digital_inputs = context.digital_inputs || [];\n\n// send only on 'send' command, otherwise chceck if anything changed\nif(msg.payload == 'send'){\n    send = true;\n} else {\n    send = false;\n    digital_inputs = msg.payload.data.slice(0,8);\n}\n\nmsg = {};\n\nif(context.digital_inputs == digital_inputs && !send){\n    return;\n} else if (!send) {\n    comparison = [];\n    for(i = 0; i < digital_inputs.length; i++) {\n\t    comparison[i] = digital_inputs[i] == context.digital_inputs[i];\n    }\n    for(i = 0; i < comparison.length; i++) {\n\t    if(!comparison[i]){\n\t        time = Math.floor(Date.now() / 1000);\n\t        msg.payload = \n                {\n                    'value': digital_inputs[i] ? 1:0,\n                    'time': time,\n                    'meterid': global.get('serno') + '_di_' + i.toString(), // was serno_di\n                    'suit': 0, // was i\n                    'point_type': \"data_point\"\n                }; \n            node.send(msg)\n\t    }\n    }\n    context.digital_inputs = digital_inputs;\n} \n\n\nif(send) {\n\ttime = Math.floor(Date.now() / 1000);\n    for(i = 0; i < digital_inputs.length; i++) {\n\t    msg.payload = \n                {\n                    'value': digital_inputs[i] ? 1:0,\n                    'time': time,\n                    'meterid': global.get('serno') + '_di_' + i.toString(), // was serno_di\n                    'suit': 0, // was i\n                    'point_type': \"data_point\"\n                }; \n            node.send(msg)\n\t}\n\tcontext.digital_inputs = digital_inputs;\n}\n\nnode.status({text: 'Status: ' + (context.digital_inputs[0] ? 1:0) + '|' + (context.digital_inputs[1] ? 1:0) + '|' + (context.digital_inputs[2] ? 1:0) + '|' + (context.digital_inputs[3] ? 1:0)});\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 260,
        "wires": [
            [
                "e661295a.8e1408",
                "f7d1186a.403e58"
            ]
        ]
    },
    {
        "id": "79b7e019.c97c3",
        "type": "link in",
        "z": "719ef0cd.4627",
        "name": "Digital_inputs",
        "links": [],
        "x": 295,
        "y": 260,
        "wires": [
            [
                "770e3b4c.eec4d4"
            ]
        ]
    },
    {
        "id": "e661295a.8e1408",
        "type": "debug",
        "z": "719ef0cd.4627",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 300,
        "wires": []
    },
    {
        "id": "24ac57e1.1ed918",
        "type": "comment",
        "z": "719ef0cd.4627",
        "name": "TCP Modbus - digital values",
        "info": "",
        "x": 460,
        "y": 240,
        "wires": []
    },
    {
        "id": "f7d1186a.403e58",
        "type": "link out",
        "z": "719ef0cd.4627",
        "name": "Special_reading_out",
        "links": [
            "c91f874d.be1658",
            "31762113.90274e",
            "189bec5c.0898d4"
        ],
        "x": 1295,
        "y": 260,
        "wires": []
    },
    {
        "id": "f3fbc241.19ccd",
        "type": "comment",
        "z": "719ef0cd.4627",
        "name": "^ set period according to measured system",
        "info": "",
        "x": 500,
        "y": 380,
        "wires": []
    },
    {
        "id": "8e524315.62e3e",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": "convert message format as described under to MQTT message, encode with protobuf",
        "info": "",
        "x": 720,
        "y": 140,
        "wires": []
    },
    {
        "id": "64692034.1cd6",
        "type": "comment",
        "z": "719ef0cd.4627",
        "name": "Send only when receive msg.payload == 'send', or on each input change",
        "info": "",
        "x": 910,
        "y": 200,
        "wires": []
    },
    {
        "id": "c769fe5a.de66f",
        "type": "comment",
        "z": "30f53997.8a2b66",
        "name": "using internal system command",
        "info": "",
        "x": 650,
        "y": 100,
        "wires": []
    },
    {
        "id": "49e0f1d6.771b2",
        "type": "comment",
        "z": "30f53997.8a2b66",
        "name": "send to MQTT",
        "info": "",
        "x": 1490,
        "y": 240,
        "wires": []
    },
    {
        "id": "cfdfe7b5.451bb8",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "10 seconds",
        "topic": "",
        "payload": "10s",
        "payloadType": "str",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "823bf657.51c358",
        "type": "link in",
        "z": "c911378b.84a6a8",
        "name": "ModbusTCP_reading_in",
        "links": [
            "894bb0ab.91a17"
        ],
        "x": 95,
        "y": 280,
        "wires": [
            [
                "2e7abeff.bd5cf2"
            ]
        ]
    },
    {
        "id": "9bfa3fc5.907ac",
        "type": "debug",
        "z": "c911378b.84a6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 320,
        "wires": []
    },
    {
        "id": "650c92fa.35a2bc",
        "type": "comment",
        "z": "c911378b.84a6a8",
        "name": "TCP Modbus - Mervis Unipi",
        "info": "",
        "x": 460,
        "y": 240,
        "wires": []
    },
    {
        "id": "b9ca3a8e.c00768",
        "type": "comment",
        "z": "3c7e4464.321d3c",
        "name": "MODBUS TCP",
        "info": "",
        "x": 1240,
        "y": 380,
        "wires": []
    },
    {
        "id": "894bb0ab.91a17",
        "type": "link out",
        "z": "3c7e4464.321d3c",
        "name": "",
        "links": [
            "823bf657.51c358"
        ],
        "x": 955,
        "y": 380,
        "wires": []
    },
    {
        "id": "44457f0b.1714",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "CRON 10 minutes",
        "topic": "",
        "payload": "10m",
        "payloadType": "str",
        "repeat": "",
        "crontab": "*/10 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 340,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "897ec98.d4bd538",
        "type": "debug",
        "z": "719ef0cd.4627",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 320,
        "wires": []
    },
    {
        "id": "90c3b3b8.9148e",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": "msg.payload =  { ",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 520,
        "y": 400,
        "wires": []
    },
    {
        "id": "7ca501ca.6580d",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": " 'value': HODNOTA:FLOAT,",
        "info": "msg.payload = \n{\n    'value': HODNOTA:FLOAT,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 570,
        "y": 440,
        "wires": []
    },
    {
        "id": "3c2a27a1.5d9dc8",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": "'time': CAS,",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': Math.floor(Date.now() / 1000);,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 530,
        "y": 480,
        "wires": []
    },
    {
        "id": "bfc0a824.e49ea8",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": "'meterid': METER_ID,",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 560,
        "y": 520,
        "wires": []
    },
    {
        "id": "8c8b5d06.e7b22",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": " 'suit': \"SUIT\",",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 530,
        "y": 560,
        "wires": []
    },
    {
        "id": "87ff5f69.e1683",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": "'point_type': \"data_point\" ",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 570,
        "y": 600,
        "wires": []
    },
    {
        "id": "1c1cfc2f.b5dab4",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": "}",
        "info": "msg.payload = \n{\n    'value': val,\n    'time': time,\n    'meterid': 99999999,\n    'suit': \"1wire\",\n    'point_type': \"data_point\"\n};",
        "x": 490,
        "y": 640,
        "wires": []
    },
    {
        "id": "231ad572.cf5caa",
        "type": "comment",
        "z": "b2d5f1b6.dabb4",
        "name": "convert message format as described to Enectiva Librarian API request",
        "info": "",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "90e8d960.4cf638",
        "type": "link in",
        "z": "b2d5f1b6.dabb4",
        "name": "HTTP_in",
        "links": [
            "d8816b44.397398"
        ],
        "x": 335,
        "y": 200,
        "wires": [
            [
                "9db0665c.e6b6e8",
                "78fb58d2.f53db8"
            ]
        ]
    },
    {
        "id": "9db0665c.e6b6e8",
        "type": "function",
        "z": "b2d5f1b6.dabb4",
        "name": "Prepare HTTP request",
        "func": "cust_uuid = global.get('cust_uuid');\nenvironment = global.get('environment');\nauth_token = global.get('auth_token');\nincoming_message = msg.payload;\nmsg = {};\n\n\nif (environment == 'production'){\n    address = \"enectiva.cz\";\n} else {\n    address = \"mericitechnologie.cz\";\n}\n\n\nif (incoming_message.point_type == 'reading'){\n    type = 'readings';\n} else {\n    type = \"data_points\";\n}\n\n\nISOtimeObj = new Date(1000*incoming_message.time);\nISOtime = ISOtimeObj.toISOString();\n\n\nmsg.url = \"https://api.\" + address + \"/\" + type + \"/\" + cust_uuid\n\nmsg.headers = {\n    'Content-Type': 'application/vnd.api+json',\n    'Authorization': 'Bearer: ' + auth_token,\n    'Accept': 'application/vnd.api+json'\n}\n\nmsg.payload = {\n    \"data\": {\n        \"time\": ISOtime,\n        \"state\": incoming_message.value,\n        \"value\": incoming_message.value,\n        \"meter_id\": incoming_message.meterid.toString() + \"_\" + incoming_message.suit.toString(),\n        \"series_id\": incoming_message.meterid.toString() + \"_\" + incoming_message.suit.toString(),\n        \"sender\": \"unipi\",\n        \"suit\": \"0\"\n    }\n}\n\nnode.status({text: \"Last message at \" + incoming_message.time.toString()});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "b3c48b7d.84a158",
                "5d1b03fb.65a58c"
            ]
        ]
    },
    {
        "id": "b3c48b7d.84a158",
        "type": "http request",
        "z": "b2d5f1b6.dabb4",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 950,
        "y": 200,
        "wires": [
            [
                "c94d27ce.aa6ec8",
                "42a1d484.ff0bec"
            ]
        ]
    },
    {
        "id": "c94d27ce.aa6ec8",
        "type": "debug",
        "z": "b2d5f1b6.dabb4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1150,
        "y": 260,
        "wires": []
    },
    {
        "id": "78fb58d2.f53db8",
        "type": "debug",
        "z": "b2d5f1b6.dabb4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "5d1b03fb.65a58c",
        "type": "debug",
        "z": "b2d5f1b6.dabb4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "42a1d484.ff0bec",
        "type": "switch",
        "z": "b2d5f1b6.dabb4",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "6252d225.e35b1c"
            ],
            [
                "3251e830.8d4398"
            ]
        ]
    },
    {
        "id": "3251e830.8d4398",
        "type": "debug",
        "z": "b2d5f1b6.dabb4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1350,
        "y": 260,
        "wires": []
    },
    {
        "id": "6252d225.e35b1c",
        "type": "debug",
        "z": "b2d5f1b6.dabb4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1350,
        "y": 140,
        "wires": []
    },
    {
        "id": "a63facd6.db15",
        "type": "comment",
        "z": "fa4618a0.5a1ec8",
        "name": "Documentation of message object format",
        "info": "```\nmsg.payload = \n{   \n    'value': val,   \n    'time': time,   \n    'meterid': 99999999,   \n    'suit': \"1wire\",   \n    'point_type': \"data_point\"   \n};\n```",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "32ecd679.7727fa",
        "type": "modbus-read",
        "z": "719ef0cd.4627",
        "name": "Read digital inputs",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "admin",
        "dataType": "Input",
        "adr": "4",
        "quantity": "8",
        "rate": "500",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "cd4390dd.51895",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 430,
        "y": 320,
        "wires": [
            [],
            [
                "770e3b4c.eec4d4",
                "897ec98.d4bd538"
            ]
        ]
    },
    {
        "id": "d9f2e56e.f59a98",
        "type": "modbus-flex-getter",
        "z": "b728105e.c940f",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "cd4390dd.51895",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 970,
        "y": 360,
        "wires": [
            [],
            [
                "85f6675d.3217e8",
                "7e1bcbb6.5f1ab4"
            ]
        ]
    },
    {
        "id": "ddf13262.82d41",
        "type": "modbus-flex-getter",
        "z": "c911378b.84a6a8",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "logIOActivities": false,
        "server": "7afba866.28a7d8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 490,
        "y": 100,
        "wires": [
            [],
            [
                "3af24471.7739dc",
                "8a915edb.9a252"
            ]
        ]
    },
    {
        "id": "fb57cf81.ed7f4",
        "type": "modbus-flex-getter",
        "z": "c911378b.84a6a8",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "logIOActivities": false,
        "server": "cd4390dd.51895",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 490,
        "y": 280,
        "wires": [
            [],
            [
                "8a915edb.9a252",
                "9bfa3fc5.907ac"
            ]
        ]
    },
    {
        "id": "dc8b84a0.6ae268",
        "type": "encode",
        "z": "fa4618a0.5a1ec8",
        "name": "",
        "protofile": "de825313.221ab",
        "protoType": "MQTTDataPoint",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "1ac16f77.b5cc71",
                "4336e6a6.c2c578",
                "8dad30f.9ef1ed"
            ]
        ]
    },
    {
        "id": "f25890fb.9ba8f",
        "type": "ui_button",
        "z": "b728105e.c940f",
        "name": "",
        "group": "60429a85.e769f4",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Read",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "trigger_read",
        "x": 490,
        "y": 560,
        "wires": [
            [
                "135253f5.08adac"
            ]
        ]
    },
    {
        "id": "9e566ecd.1cde7",
        "type": "ui_dropdown",
        "z": "b728105e.c940f",
        "name": "fc",
        "label": "Function code",
        "tooltip": "",
        "place": "Select option",
        "group": "60429a85.e769f4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "",
                "value": 3,
                "type": "num"
            },
            {
                "label": "",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "fc",
        "x": 490,
        "y": 360,
        "wires": [
            [
                "135253f5.08adac"
            ]
        ]
    },
    {
        "id": "390be9bb.ea9fc6",
        "type": "ui_dropdown",
        "z": "b728105e.c940f",
        "name": "datatype",
        "label": "Data type",
        "tooltip": "",
        "place": "Select option",
        "group": "60429a85.e769f4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Int32 BE",
                "value": "int32",
                "type": "str"
            },
            {
                "label": "Float BE",
                "value": "float",
                "type": "str"
            },
            {
                "label": "Raw HEX",
                "value": "hex",
                "type": "str"
            },
            {
                "label": "Int16 BE",
                "value": "int16",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "datatype",
        "x": 500,
        "y": 520,
        "wires": [
            [
                "135253f5.08adac"
            ]
        ]
    },
    {
        "id": "20bcf5eb.2f4cfa",
        "type": "ui_text_input",
        "z": "b728105e.c940f",
        "name": "unitid",
        "label": "Unit ID",
        "tooltip": "",
        "group": "60429a85.e769f4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "1",
        "topic": "unitid",
        "x": 490,
        "y": 400,
        "wires": [
            [
                "135253f5.08adac"
            ]
        ]
    },
    {
        "id": "8f01c115.ca2c2",
        "type": "ui_text_input",
        "z": "b728105e.c940f",
        "name": "address",
        "label": "Address (start register)",
        "tooltip": "",
        "group": "60429a85.e769f4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "1",
        "topic": "address",
        "x": 500,
        "y": 440,
        "wires": [
            [
                "135253f5.08adac"
            ]
        ]
    },
    {
        "id": "770a49b1.f74b18",
        "type": "ui_text_input",
        "z": "b728105e.c940f",
        "name": "quantity",
        "label": "Quantity (# of registers to read)",
        "tooltip": "",
        "group": "60429a85.e769f4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "1",
        "topic": "quantity",
        "x": 500,
        "y": 480,
        "wires": [
            [
                "135253f5.08adac"
            ]
        ]
    },
    {
        "id": "ffd32547.af3f78",
        "type": "ui_text",
        "z": "b728105e.c940f",
        "group": "60429a85.e769f4",
        "order": 7,
        "width": "8",
        "height": "1",
        "name": "",
        "label": "Value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1370,
        "y": 360,
        "wires": []
    },
    {
        "id": "788dd6aa.132828",
        "type": "ui_text",
        "z": "b728105e.c940f",
        "group": "60429a85.e769f4",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Request",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 940,
        "y": 420,
        "wires": []
    },
    {
        "id": "5d341c04.64a854",
        "type": "ui_text",
        "z": "b728105e.c940f",
        "group": "2a4cc262.c1aebe",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "mqtt status",
        "label": "MQTT status",
        "format": "{{msg.status.text}}",
        "layout": "row-spread",
        "x": 710,
        "y": 760,
        "wires": []
    },
    {
        "id": "9b60431d.d8767",
        "type": "mqtt in",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "topic": "${MQTT_PING}",
        "qos": "2",
        "datatype": "auto",
        "broker": "a87881c4.212c5",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "3e3260f2.ee6cf",
                "5a2d360d.5e3828"
            ]
        ]
    },
    {
        "id": "db03da5b.f887f8",
        "type": "mqtt out",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "topic": "${MQTT_PING}",
        "qos": "1",
        "retain": "false",
        "broker": "a87881c4.212c5",
        "x": 620,
        "y": 560,
        "wires": []
    },
    {
        "id": "3e3260f2.ee6cf",
        "type": "function",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "func": "if (msg.payload == 'ping') {\n    msg.payload = 'pong';\n    return msg;\n}\nelse {\n    return\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "db03da5b.f887f8"
            ]
        ]
    },
    {
        "id": "5a2d360d.5e3828",
        "type": "debug",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 620,
        "wires": []
    },
    {
        "id": "dbc99d3e.af06",
        "type": "file in",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "filename": "${METER_SETTINGS_FILE}",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "a9c65ead.988d"
            ]
        ]
    },
    {
        "id": "a9c65ead.988d",
        "type": "json",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 710,
        "y": 120,
        "wires": [
            [
                "ab3b5ebf.70c69"
            ]
        ]
    },
    {
        "id": "ab3b5ebf.70c69",
        "type": "function",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "func": "data = msg.payload\nuuid = data.enectiva_config.cust_uuid || null\nenvironment = data.enectiva_config.environment || null\n\nif (!data) {\n    node.error('Config file data error')\n    return\n}\n\nif (uuid) {\n    global.set('cust_uuid', uuid);\n    node.warn('Customer UUID set to ' + uuid)\n} else {\n    node.error('Customer UUID setting error')\n}\n\nif (environment) {\n    global.set('environment', environment); // can be 'staging' or 'production';\n    node.warn('Environment set to ' + msg.payload.enectiva_config.environment)\n} else {\n    global.set('environment', 'staging');\n    node.error('Environment not specified - defaulting to staging')\n}\n\nif (data.to_read) {\n    global.set('meters', data.to_read)\n    node.status({text: data.to_read.length + \" meters set for readout\"});\n    node.warn(data.to_read.length + \" meters set for readout\")\n} else {\n    node.error(\"Error setting meters for readout\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 120,
        "wires": [
            [
                "2a799c4f.89ac34"
            ]
        ]
    },
    {
        "id": "2a799c4f.89ac34",
        "type": "debug",
        "z": "bcfc1592.fd71f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 990,
        "y": 120,
        "wires": []
    },
    {
        "id": "1b7eb60d.a2299a",
        "type": "function",
        "z": "3c7e4464.321d3c",
        "name": "Filter by period",
        "func": "meters = global.get('meters')\ntriggered_period = msg.payload\n\nfor (var meter of meters) {\n    if (meter.period == triggered_period) {\n        node.send(meter)\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 260,
        "wires": [
            [
                "6abdcb66.e3c4e4",
                "bd9684f2.5af5a8"
            ]
        ]
    },
    {
        "id": "b67e646d.e7c558",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "CRON 5 minutes",
        "topic": "",
        "payload": "5m",
        "payloadType": "str",
        "repeat": "",
        "crontab": "*/5 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "6abdcb66.e3c4e4",
        "type": "debug",
        "z": "3c7e4464.321d3c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "87e5bd8a.66c3c",
        "type": "debug",
        "z": "481c78ef.5a7c48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1070,
        "y": 380,
        "wires": []
    },
    {
        "id": "39ab7e61.3aa5a2",
        "type": "websocket in",
        "z": "481c78ef.5a7c48",
        "name": "",
        "server": "",
        "client": "c1c12c16.5be98",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "27210904.7bc256"
            ]
        ]
    },
    {
        "id": "a56d5425.bfcf08",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": "save_to_flow_context",
        "func": "circuit_name = msg.payload.circuit;\ncounter = msg.payload.counter;\nstate = msg.payload.value;\n\ncircuit_data = flow.get(circuit_name) || {'name': circuit_name, 'offset': 0, 'maxval': 0, 'state': 0}\n\n// offset = flow.get(\"offset\") || flow.get(\"initial_offset\") || 0;\n// maxval = flow.get(\"maxval\") || 0;\n\n\nif(counter + circuit_data.offset < circuit_data.maxval){\n    node.warn(\"Counter has reset\");\n    circuit_data.offset = circuit_data.maxval\n}\ncircuit_data.maxval = counter + circuit_data.offset;\ncircuit_data.state = state\n\n// flow.set(\"offset\", offset);\n// flow.set(\"maxval\", maxval)\n\nflow.set(circuit_name, circuit_data);\n\n\nmsg = {};\nmsg.maxval = circuit_data.maxval;\nmsg.offset = circuit_data.offset;\nmsg.circuit = circuit_name;\nmsg.counter = circuit_data.counter;\n\nmsg.circuit_data = circuit_data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 1140,
        "wires": [
            [
                "6fcce95f.b68088",
                "4687dfbe.6a482"
            ]
        ]
    },
    {
        "id": "6fcce95f.b68088",
        "type": "debug",
        "z": "481c78ef.5a7c48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1310,
        "y": 1140,
        "wires": []
    },
    {
        "id": "639d91ec.cc4a1",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": "get_counter_value",
        "func": "let circuit_name = msg.payload.circuit_name;\n\nlet meter_id = msg.payload.meter_id || circuit_name;\nlet suit = msg.payload.suit || 'default';\n\ncircuit_data = flow.get(circuit_name) || {'name': circuit_name, 'offset': 0, 'maxval': 0}\n\nlet time = Math.floor(Date.now() / 1000);\nlet point_type = msg.payload.point_type || 'reading';\n\nmsg = {};\n\nmsg.payload = \n{\n    'value': circuit_data.maxval,\n    'time': time,\n    'meterid': meter_id,\n    'suit': suit,\n    'point_type': point_type\n};\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 60,
        "wires": [
            [
                "a9d101b6.ff4a2",
                "ac7f3d1e.dea7e"
            ]
        ]
    },
    {
        "id": "a9d101b6.ff4a2",
        "type": "link out",
        "z": "481c78ef.5a7c48",
        "name": "Modbus_reading_out",
        "links": [
            "c91f874d.be1658"
        ],
        "x": 1095,
        "y": 60,
        "wires": []
    },
    {
        "id": "8aebbe81.c3abe",
        "type": "link in",
        "z": "481c78ef.5a7c48",
        "name": "DI Counter",
        "links": [
            "be8bab2d.266948",
            "36f4b92a.38bb26"
        ],
        "x": 95,
        "y": 60,
        "wires": [
            [
                "a6818ade.334a28"
            ]
        ]
    },
    {
        "id": "ac7f3d1e.dea7e",
        "type": "debug",
        "z": "481c78ef.5a7c48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "d7b3f99d.0a94e8",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": "get_DI_state",
        "func": "let circuit_name = msg.payload.circuit_name;\n\nlet meter_id = msg.payload.meter_id || circuit_name;\nlet suit = msg.payload.suit || 'default';\n\ncircuit_data = flow.get(circuit_name) || null;\n\n\nlet time = Math.floor(Date.now() / 1000);\nlet point_type = msg.payload.point_type || 'reading';\n\nmsg = {};\n\nmsg.payload = \n{\n    'value': circuit_data.state,\n    'time': time,\n    'meterid': meter_id,\n    'suit': suit,\n    'point_type': point_type\n};\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 180,
        "wires": [
            [
                "97347aa.1b43f88",
                "1818a413.6bd88c"
            ]
        ]
    },
    {
        "id": "97347aa.1b43f88",
        "type": "link out",
        "z": "481c78ef.5a7c48",
        "name": "Modbus_reading_out",
        "links": [
            "c91f874d.be1658"
        ],
        "x": 1095,
        "y": 180,
        "wires": []
    },
    {
        "id": "182a138e.bd5b9c",
        "type": "link in",
        "z": "481c78ef.5a7c48",
        "name": "DI State",
        "links": [
            "26c0c6b2.0dc25a",
            "f4214476.6a3388"
        ],
        "x": 95,
        "y": 180,
        "wires": [
            [
                "b68182cb.182a3",
                "69a62595.312c6c"
            ]
        ]
    },
    {
        "id": "1818a413.6bd88c",
        "type": "debug",
        "z": "481c78ef.5a7c48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "8e74ef91.12458",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "1.01",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 380,
        "wires": [
            [
                "87e5bd8a.66c3c",
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "dc2a01ad.cc02c",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "1.02",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "84920c6f.64e8a",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "1.03",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 460,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "11182494.2ef22b",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "1.04",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 500,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "7ad6d0b9.09a9b",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.01",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 540,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "cc7a3435.daeb78",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.02",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 580,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "427071ea.772b9",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.03",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 620,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "a822c24c.a95e4",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.04",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 660,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "fad79cc.efd156",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.05",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 700,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "988fa87e.67f0c8",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.06",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 740,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "ebce50f9.edc7a",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.07",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 780,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "280446b7.630b0a",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.08",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 820,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "dd995a3c.c8c1d8",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.09",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 860,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "c2f48150.e7795",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.10",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 900,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "de23c088.2f5db",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.11",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 940,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "6c0020e2.42dea",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.12",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 980,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "8d144a7e.e2d1e8",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.13",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 1020,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "b08b42a3.8e25e",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.14",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 1060,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "13905a5d.0b0866",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.15",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 1100,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "a528b53.8931b48",
        "type": "unipi-input",
        "z": "481c78ef.5a7c48",
        "name": "",
        "alias": "",
        "devices": "input",
        "circuits": "2.16",
        "property": "",
        "seedev": "0",
        "seecirc": "0",
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "a56d5425.bfcf08"
            ]
        ]
    },
    {
        "id": "733f08c5.833198",
        "type": "http request",
        "z": "481c78ef.5a7c48",
        "name": "JSON",
        "method": "GET",
        "ret": "obj",
        "url": "http://127.0.0.1/json/all",
        "tls": "",
        "x": 250,
        "y": 480,
        "wires": [
            [
                "a090805a.902c6"
            ]
        ]
    },
    {
        "id": "5b264e63.c85de",
        "type": "inject",
        "z": "481c78ef.5a7c48",
        "name": "Init",
        "topic": "",
        "payload": "{\"url\":\"http://127.0.0.1/json/input/1_01\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 130,
        "y": 480,
        "wires": [
            [
                "733f08c5.833198"
            ]
        ]
    },
    {
        "id": "a090805a.902c6",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": "split",
        "func": "list_of_values = msg.payload.data\n\nfor (var point of list_of_values) {\n    message = {}\n    message.payload = point\n    node.send(message)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 480,
        "wires": [
            [
                "e81fff90.eaa22"
            ]
        ]
    },
    {
        "id": "e81fff90.eaa22",
        "type": "json",
        "z": "481c78ef.5a7c48",
        "name": "to_string",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 500,
        "y": 480,
        "wires": [
            [
                "27210904.7bc256"
            ]
        ]
    },
    {
        "id": "27210904.7bc256",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": ">>>>>",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 380,
        "wires": [
            [
                "8e74ef91.12458",
                "dc2a01ad.cc02c",
                "84920c6f.64e8a",
                "11182494.2ef22b",
                "7ad6d0b9.09a9b",
                "cc7a3435.daeb78",
                "427071ea.772b9",
                "a822c24c.a95e4",
                "fad79cc.efd156",
                "988fa87e.67f0c8",
                "ebce50f9.edc7a",
                "280446b7.630b0a",
                "dd995a3c.c8c1d8",
                "c2f48150.e7795",
                "de23c088.2f5db",
                "6c0020e2.42dea",
                "8d144a7e.e2d1e8",
                "b08b42a3.8e25e",
                "13905a5d.0b0866",
                "a528b53.8931b48"
            ]
        ]
    },
    {
        "id": "1eb3a17d.4665ff",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "CRON 30 minutes",
        "topic": "",
        "payload": "30m",
        "payloadType": "str",
        "repeat": "",
        "crontab": "*/15 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 420,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "43f28dc3.9938e4",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "CRON 60 minutes",
        "topic": "",
        "payload": "60m",
        "payloadType": "str",
        "repeat": "",
        "crontab": "*/15 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "c1814bf0.c8fca8",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "CRON 1 hour",
        "topic": "",
        "payload": "1h",
        "payloadType": "str",
        "repeat": "",
        "crontab": "*/15 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "bd9684f2.5af5a8",
        "type": "switch",
        "z": "3c7e4464.321d3c",
        "name": "protocol_switch",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "modbus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "modbus_rtu",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "di_counter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "di_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "modbus_tcp",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 720,
        "y": 300,
        "wires": [
            [
                "28858951.dd27b6"
            ],
            [
                "28858951.dd27b6"
            ],
            [
                "36f4b92a.38bb26"
            ],
            [
                "f4214476.6a3388"
            ],
            [
                "894bb0ab.91a17"
            ]
        ]
    },
    {
        "id": "559606e.e96c1f8",
        "type": "function",
        "z": "c911378b.84a6a8",
        "name": "config -> payload",
        "func": "incoming = msg\noutgoing = {}\n\noutgoing.payload = incoming.config\n\nreturn outgoing;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 100,
        "wires": [
            [
                "ddf13262.82d41",
                "a30cdf97.5281d"
            ]
        ]
    },
    {
        "id": "2e7abeff.bd5cf2",
        "type": "function",
        "z": "c911378b.84a6a8",
        "name": "config -> payload",
        "func": "incoming = msg\noutgoing = []\n\noutgoing.payload = incoming.config\n\nreturn outgoing;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "fb57cf81.ed7f4"
            ]
        ]
    },
    {
        "id": "d673c970.b0f068",
        "type": "debug",
        "z": "c911378b.84a6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 210,
        "y": 160,
        "wires": []
    },
    {
        "id": "a30cdf97.5281d",
        "type": "debug",
        "z": "c911378b.84a6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 160,
        "wires": []
    },
    {
        "id": "26c0c6b2.0dc25a",
        "type": "link out",
        "z": "481c78ef.5a7c48",
        "name": "",
        "links": [
            "182a138e.bd5b9c"
        ],
        "x": 1535,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f4214476.6a3388",
        "type": "link out",
        "z": "3c7e4464.321d3c",
        "name": "",
        "links": [
            "182a138e.bd5b9c"
        ],
        "x": 955,
        "y": 340,
        "wires": [],
        "inputLabels": [
            "DI"
        ]
    },
    {
        "id": "ed07de23.cc561",
        "type": "comment",
        "z": "3c7e4464.321d3c",
        "name": "DIGITAL INPUT STATE",
        "info": "",
        "x": 1260,
        "y": 340,
        "wires": []
    },
    {
        "id": "e4fc3478.f40c18",
        "type": "inject",
        "z": "bcfc1592.fd71f8",
        "name": "Config after strartup",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "x": 200,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4687dfbe.6a482",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": "enqueue_state_readout",
        "func": "meters = global.get(\"meters\") || [];\ncircuit = msg.circuit\n\nmsg = meters.filter(m => (m.config.circuit_name == circuit & m.type == \"di_state\"));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 1180,
        "wires": [
            [
                "29567ebe.a48ef2",
                "26c0c6b2.0dc25a"
            ]
        ]
    },
    {
        "id": "a6818ade.334a28",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": "config -> payload",
        "func": "incoming = msg\noutgoing = {}\n\noutgoing.payload = incoming.config\n\nreturn outgoing;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 60,
        "wires": [
            [
                "639d91ec.cc4a1"
            ]
        ]
    },
    {
        "id": "b68182cb.182a3",
        "type": "function",
        "z": "481c78ef.5a7c48",
        "name": "config -> payload",
        "func": "incoming = msg\noutgoing = {}\n\noutgoing.payload = incoming.config\n\nreturn outgoing;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "d7b3f99d.0a94e8"
            ]
        ]
    },
    {
        "id": "29567ebe.a48ef2",
        "type": "debug",
        "z": "481c78ef.5a7c48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 1220,
        "wires": []
    },
    {
        "id": "69a62595.312c6c",
        "type": "debug",
        "z": "481c78ef.5a7c48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 210,
        "y": 220,
        "wires": []
    },
    {
        "id": "23a98622.1124da",
        "type": "inject",
        "z": "3c7e4464.321d3c",
        "name": "CRON 1 minute",
        "topic": "",
        "payload": "1m",
        "payloadType": "str",
        "repeat": "",
        "crontab": "*/1 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "1b7eb60d.a2299a"
            ]
        ]
    },
    {
        "id": "8f1bd8c4.281308",
        "type": "comment",
        "z": "481c78ef.5a7c48",
        "name": "Each change is sent through WS",
        "info": "",
        "x": 210,
        "y": 340,
        "wires": []
    },
    {
        "id": "8f6d09c9.84b658",
        "type": "comment",
        "z": "481c78ef.5a7c48",
        "name": "Initial state is obtained with HTTP JSON",
        "info": "",
        "x": 230,
        "y": 440,
        "wires": []
    },
    {
        "id": "2788ad2a.1805c2",
        "type": "comment",
        "z": "481c78ef.5a7c48",
        "name": "For each DI save data to context",
        "info": "",
        "x": 1150,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a3a669ce.6f6a18",
        "type": "comment",
        "z": "481c78ef.5a7c48",
        "name": "Request DI state",
        "info": "",
        "x": 240,
        "y": 140,
        "wires": []
    },
    {
        "id": "2dd8d1b7.1e098e",
        "type": "comment",
        "z": "481c78ef.5a7c48",
        "name": "Request DI counter value",
        "info": "",
        "x": 270,
        "y": 20,
        "wires": []
    }
]